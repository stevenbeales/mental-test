# http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/command-options.html#command-options-ruby
---
app: acme
region: us-east-1
solution_stack_name: 64bit Amazon Linux running Ruby 1.9.3
package:
  verbose: true
  exclude_files: [resetdb.sh,  rspec.xml, README*, db/*.sqlite3]
  exclude_dirs: [solr, features]
#--
ebextensions:
  01settings.config:
    # Run rake tasks before an application deployment
    container_commands:
      01seed:
        command: rake db:seed
        leader_only: true

  05-start-faye-server.config:
    files:
      "/opt/elasticbeanstalk/hooks/appdeploy/post/05_start_faye_server.sh":
        mode: "000755"
        owner: root
        group: root
        content:  |
          #!/usr/bin/env bash
          # Loading environment data
          EB_APP_USER=$(/opt/elasticbeanstalk/bin/get-config container -k app_user)
          EB_APP_DEPLOY_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k app_deploy_dir)
          EB_SCRIPT_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k script_dir)
          EB_SUPPORT_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k support_dir)
          # Setting up correct environment and ruby version so that bundle can load all gems
          . $EB_SUPPORT_DIR/envvars
          . $EB_SCRIPT_DIR/use-app-ruby.sh
          # Now we can do the actual restart of the worker. Make sure to have double quotes when using env vars in the command.
          cd $EB_APP_DEPLOY_DIR
          su -s /bin/bash -c "RAILS_ENV=production bundle exec thin -C config/private_pub_thin.yml --timeout 60 start -d" $EB_APP_USER

#---
options:
  aws:elasticbeanstalk:application:environment:
    RAILS_ENV: foobar
    RACK_ENV: bizbaz

  aws:autoscaling:launchconfiguration:
    InstanceType: foo
    EC2KeyName: eb-ssh
    SecurityGroups: 'acme-production-control'

  aws:autoscaling:asg:
    MinSize: 1
    MaxSize: 5

  aws:elb:loadbalancer:
    SSLCertificateId: 'arn:aws:iam::XXXXXXX:server-certificate/acme'
    LoadBalancerHTTPSPort: 443

  aws:elb:policies:
    Stickiness Policy: true

  aws:elasticbeanstalk:sns:topics:
    Notification Endpoint: 'alerts@acme.com'

  aws:elasticbeanstalk:application:
    Application Healthcheck URL: '/healthcheck'

inactive:
  aws:autoscaling:asg:
    MinSize: 0
    Cooldown: 900

#---
development:
  strategy: inplace-update
  options:
    aws:autoscaling:launchconfiguration:
      InstanceType: t1.micro
#---
production:
  options:
    aws:autoscaling:launchconfiguration:
      InstanceType: t1.small